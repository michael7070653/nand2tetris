function Math.init 0
push constant 16
call Array.new 1
pop static 0
push static 0
push constant 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 1
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 2
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 3
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 4
add
push constant 16
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 5
add
push constant 32
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 6
add
push constant 64
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 7
add
push constant 128
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 8
add
push constant 256
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 9
add
push constant 512
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 10
add
push constant 1024
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 11
add
push constant 2048
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 12
add
push constant 4096
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 13
add
push constant 8192
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 14
add
push constant 16384
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 0
push constant 15
add
push constant 16384
push constant 16384
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
gt
not
if-goto LABEL_1_start
push argument 0
return
goto LABEL_2_end
label LABEL_1_start
label LABEL_2_end
push argument 0
neg
return
function Math.bit 0
push argument 0
push static 0
push argument 1
add
pop pointer 1
push that 0
and
push constant 0
eq
not
return
function Math.multiply 3
push constant 0
pop local 0
push argument 0
pop local 1
push constant 0
pop local 2
label LABEL_3_start
push local 0
push constant 16
lt
not
if-goto LABEL_4_end
push argument 1
push local 0
call Math.bit 2
not
if-goto LABEL_5_start
push local 2
push local 1
add
pop local 2
goto LABEL_6_end
label LABEL_5_start
label LABEL_6_end
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto LABEL_3_start
label LABEL_4_end
push local 2
return
function Math.divideHelper 1
push argument 0
push argument 1
lt
push argument 1
push constant 0
lt
or
not
if-goto LABEL_7_start
push constant 0
return
goto LABEL_8_end
label LABEL_7_start
label LABEL_8_end
push argument 0
push argument 1
push argument 1
add
call Math.divideHelper 2
pop local 0
push argument 0
push constant 2
push local 0
call Math.multiply 2
push argument 1
call Math.multiply 2
sub
push argument 1
lt
not
if-goto LABEL_9_start
push local 0
push local 0
add
return
goto LABEL_10_end
label LABEL_9_start
push local 0
push local 0
add
push constant 1
add
return
label LABEL_10_end
function Math.divide 5
push argument 0
push constant 0
lt
pop local 3
push argument 1
push constant 0
lt
pop local 4
push argument 0
call Math.abs 1
pop local 1
push argument 1
call Math.abs 1
pop local 2
push local 1
push local 2
call Math.divideHelper 2
pop local 0
push local 3
push local 4
eq
not
if-goto LABEL_11_start
push local 0
return
goto LABEL_12_end
label LABEL_11_start
label LABEL_12_end
push local 0
neg
return
function Math.sqrt 4
push constant 0
pop local 1
push constant 7
pop local 0
label LABEL_13_start
push local 0
push constant 0
lt
not
not
if-goto LABEL_14_end
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
add
pop local 2
push local 2
push local 2
call Math.multiply 2
pop local 3
push local 3
push argument 0
gt
not
push local 3
push constant 0
gt
and
not
if-goto LABEL_15_start
push local 2
pop local 1
goto LABEL_16_end
label LABEL_15_start
label LABEL_16_end
push local 0
push constant 1
sub
pop local 0
goto LABEL_13_start
label LABEL_14_end
push local 1
return
function Math.max 1
push argument 0
push argument 1
gt
not
if-goto LABEL_17_start
push argument 0
pop local 0
goto LABEL_18_end
label LABEL_17_start
push argument 1
pop local 0
label LABEL_18_end
push local 0
return
function Math.min 1
push argument 0
push argument 1
lt
not
if-goto LABEL_19_start
push argument 0
pop local 0
goto LABEL_20_end
label LABEL_19_start
push argument 1
pop local 0
label LABEL_20_end
push local 0
return
