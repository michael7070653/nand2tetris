function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 2048
pop static 2
push constant 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 16384
push constant 2048
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push static 2
pop static 4
push constant 0
return
function Memory.bestFit 5
push constant 1
neg
pop local 1
push constant 16384
push constant 2048
sub
pop local 2
push static 2
pop local 4
push constant 0
pop local 0
label WHILE_EXP0
push local 4
push constant 0
eq
not
not
if-goto WHILE_END0
push constant 1
push local 4
add
pop pointer 1
push that 0
pop local 3
push local 3
push argument 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push local 2
gt
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
pop local 1
push local 3
pop local 2
label IF_FALSE1
label IF_FALSE0
push local 4
pop local 0
push constant 0
push local 4
add
pop pointer 1
push that 0
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function Memory.allocateFromFreeList 3
push static 2
pop local 0
push constant 1
push static 2
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 0
gt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push static 2
add
pop pointer 1
push that 0
pop static 2
push constant 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
label IF_FALSE0
push constant 1
push local 0
add
push argument 0
push constant 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 2
add
pop pointer 1
push that 0
pop local 2
push static 2
push argument 0
add
pop static 2
push constant 1
push static 2
add
push local 1
push argument 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 2
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 2
pop static 4
label IF_FALSE1
push local 0
return
function Memory.reallocateFreeList 3
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Memory.allocateFromFreeList 1
return
goto IF_END0
label IF_FALSE0
push constant 0
push argument 0
add
pop pointer 1
push that 0
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
push local 0
add
push constant 1
push local 0
add
pop pointer 1
push that 0
push argument 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 1
add
push constant 2
add
push argument 1
sub
pop local 0
push constant 1
push local 0
add
push argument 1
push constant 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
return
goto IF_END1
label IF_FALSE1
push local 0
push static 4
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
pop static 4
label IF_FALSE2
push constant 0
push argument 0
add
push constant 0
push local 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END1
label IF_END0
push local 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 2
push argument 0
call Memory.bestFit 1
pop local 0
push local 0
push constant 1
neg
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
return
label IF_FALSE0
push local 0
push argument 0
push constant 2
add
call Memory.reallocateFreeList 2
pop local 1
push constant 1
push local 1
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 2
add
return
function Memory.deAlloc 1
push argument 0
push constant 2
sub
pop local 0
push constant 0
push static 4
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push local 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
pop static 4
push constant 0
return
function Memory.max 3
push argument 0
pop local 0
push constant 0
push argument 0
add
pop pointer 1
push that 0
pop local 1
push argument 0
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP0
push local 0
push local 2
lt
not
if-goto WHILE_END0
push local 0
push argument 0
add
pop pointer 1
push that 0
push local 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 0
add
pop pointer 1
push that 0
pop local 1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
