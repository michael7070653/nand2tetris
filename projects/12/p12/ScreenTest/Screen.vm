function Screen.init 0
push constant 16384
pop static 0
push constant 0
not
pop static 1
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 3
push argument 0
push constant 15
and
call Math.two_to_the 1
pop local 2
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 0
add
pop pointer 1
push that 0
push local 2
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 0
push static 0
add
pop pointer 1
push that 0
push local 2
not
and
pop local 1
label IF_END0
push local 0
push static 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Screen.drawLine 7
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push argument 2
push argument 0
gt
push argument 3
push argument 1
gt
and
push argument 2
push argument 0
lt
push argument 3
push argument 1
lt
and
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 2
call Math.min 2
pop local 6
push argument 0
push argument 2
call Math.max 2
pop local 3
push local 3
push local 6
sub
pop local 3
push argument 1
push argument 3
call Math.min 2
pop local 5
push argument 1
push argument 3
call Math.max 2
pop local 4
push local 4
push local 5
sub
pop local 4
label WHILE_EXP0
push local 0
push local 3
lt
push local 0
push local 3
eq
or
push local 1
push local 4
lt
push local 1
push local 4
eq
or
and
not
if-goto WHILE_END0
push local 6
push local 0
add
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
pop local 0
push local 2
push local 4
add
pop local 2
goto IF_END1
label IF_FALSE1
push local 1
push constant 1
add
pop local 1
push local 2
push local 3
sub
pop local 2
label IF_END1
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push argument 2
push argument 0
lt
push argument 3
push argument 1
gt
and
push argument 2
push argument 0
gt
push argument 3
push argument 1
lt
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 2
push argument 0
lt
push argument 3
push argument 1
gt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push argument 2
call Math.min 2
pop local 6
push argument 0
push argument 2
call Math.max 2
pop local 3
push local 3
push local 6
sub
pop local 3
push local 3
pop local 0
push argument 1
push argument 3
call Math.min 2
pop local 5
push argument 1
push argument 3
call Math.max 2
pop local 4
push local 4
push local 5
sub
pop local 4
label WHILE_EXP1
push local 0
push local 3
lt
push local 0
push local 3
eq
or
push local 1
push local 4
lt
push local 1
push local 4
eq
or
and
not
if-goto WHILE_END1
push local 6
push local 0
add
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push constant 1
sub
pop local 0
push local 2
push local 4
add
pop local 2
goto IF_END4
label IF_FALSE4
push local 1
push constant 1
add
pop local 1
push local 2
push local 3
sub
pop local 2
label IF_END4
goto WHILE_EXP1
label WHILE_END1
goto IF_END3
label IF_FALSE3
push argument 0
push argument 2
call Math.min 2
pop local 6
push argument 0
push argument 2
call Math.max 2
pop local 3
push local 3
push local 6
sub
pop local 3
push argument 1
push argument 3
call Math.min 2
pop local 5
push argument 1
push argument 3
call Math.max 2
pop local 4
push local 4
push local 5
sub
pop local 4
push local 4
pop local 1
label WHILE_EXP2
push local 0
push local 3
lt
push local 0
push local 3
eq
or
push local 1
push local 4
lt
push local 1
push local 4
eq
or
and
not
if-goto WHILE_END2
push local 6
push local 0
add
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 2
push constant 0
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push constant 1
sub
pop local 1
push local 2
push local 3
add
pop local 2
goto IF_END5
label IF_FALSE5
push local 0
push constant 1
add
pop local 0
push local 2
push local 4
sub
pop local 2
label IF_END5
goto WHILE_EXP2
label WHILE_END2
label IF_END3
label IF_FALSE2
push argument 1
push argument 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push argument 0
push argument 2
call Math.min 2
pop local 6
push argument 0
push argument 2
call Math.max 2
pop local 3
push local 3
push local 6
sub
pop local 3
label WHILE_EXP3
push local 0
push local 3
lt
not
if-goto WHILE_END3
push local 6
push local 0
add
push argument 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
label IF_FALSE6
push argument 0
push argument 2
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push argument 1
push argument 3
call Math.min 2
pop local 5
push argument 1
push argument 3
call Math.max 2
pop local 4
push local 4
push local 5
sub
pop local 4
label WHILE_EXP4
push local 1
push local 4
lt
not
if-goto WHILE_END4
push argument 0
push local 0
add
push local 5
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP4
label WHILE_END4
label IF_FALSE7
push constant 0
return
function Screen.drawRectangle 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
lt
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 2
push local 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 1
push argument 2
pop local 0
label WHILE_EXP0
push local 0
push argument 2
neg
gt
not
if-goto WHILE_END0
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
sub
push argument 1
push local 0
add
push argument 0
push argument 2
push argument 2
call Math.multiply 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
